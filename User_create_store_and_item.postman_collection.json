{
	"info": {
		"_postman_id": "26f794de-78b6-4753-b262-682046752996",
		"name": "User create store and item",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4916e663-fd5d-4f7b-9482-ef99d9344f51",
						"exec": [
							"postman.clearEnvironmentVariable(\"access_token\");\r",
							"\r",
							"tests[\"Response time has to be less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type')\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"ifti2\",\r\n    \"password\": \"123456\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "JWT",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ae7d2df-c9ab-4d35-a79a-1f75333cdfb4",
						"exec": [
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\")\r",
							"\r",
							"tests[\"Response time has to be less than 150ms\"] = responseTime < 150;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"ifti2\",\r\n    \"password\": \"123456\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/store/test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12368f70-71f7-4e86-a31a-d49c66754118",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store is returned\"] = jsonData.name === 'test_store'\r",
							"tests[\"Store ID of is returned\"] = jsonData.id === 1;\r",
							"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;\r",
							"\r",
							"tests[\"Successfully POST request\"] = responseCode.code === 201;\r",
							"tests[\"Response is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type in present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type in application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';\r",
							"postman.setEnvironmentVariable(\"store_id\", jsonData.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/store/test_store",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test_store"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/test_item in test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e886dd3-c8a6-4dd5-b493-5261c5dc324e",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Item name is returned\"] = jsonData.name === \"test_item\";\r",
							"tests[\"item price is returned\"] = jsonData.price === 17.99;\r",
							"tests[\"Successfully POST request\"] = responseCode.code === 201;\r",
							"tests[\"Response is less than 200ms\"] = responseTime < 200;\r",
							"tests[\"Content-Type in present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type in application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"price\": 17.99,\r\n    \"store_id\":{{store_id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/stores/test_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores",
						"test_item"
					]
				}
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4be0d0bf-d890-4539-88b4-c0a6a0b29234",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store 'test_store' is returned\"] = jsonData.stores[0].name === 'test_store'\r",
							"tests[\"ID of 'test_store' is returned\"] = jsonData.stores[0].id === parseInt(environment.store_id)\r",
							"tests[\"Item 'test_item' is returned inside 'test_store'\" ] = jsonData.stores[0].items[0];\r",
							"tests[\"Item 'test_item' price is returned inside 'test_store'\" ] = jsonData.stores[0].items[0].price === 17.99;\r",
							"\r",
							"\r",
							"tests[\"Response is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"\r",
							"tests[\"Content-Type in present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type in application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/my_item Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "88225b9a-e7e8-4602-8e68-2c02a041ed73",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Message is returned\"] = jsonData.message === 'Item deleted';\r",
							"tests[\"Successfully POST request\"] = responseCode.code === 200;\r",
							"tests[\"Response is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type in present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type in application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/item/my_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"my_item"
					]
				}
			},
			"response": []
		},
		{
			"name": "/store/<name> Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3803d33e-4a8f-4dcf-ae12-17019a43adda",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store name is returned\"] = jsonData.message === 'Store deleted';\r",
							"tests[\"Successfully POST request\"] = responseCode.code === 200;\r",
							"tests[\"Response is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type in present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type in application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/store/<name>",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"<name>"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}